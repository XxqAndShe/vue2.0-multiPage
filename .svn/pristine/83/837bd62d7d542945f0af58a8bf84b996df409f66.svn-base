<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width,initial-scale=1"><meta http-equiv="X-UA-Compatible" content="ie=edge"><title>Document</title><link rel="stylesheet" href="../../static/css/normalize.min.css"><link rel="stylesheet" href="//at.alicdn.com/t/font_580199_qdrw4brplclyp66r.css"><link rel="stylesheet" href="../../static/css/all.css"><script src="../../static/js/lib/es6-promise.auto.min.js"></script><script src="../../static/js/lib/require.min.js"></script><script data-path="../../" src="../../static/config.js"></script></head><body><div id="app" v-clock><layout-table><div slot="header-left-handler"><el-button :loading="orderAccepting" :disabled="loading" type="primary" icon="el-icon-tickets" @click="doBatchOrderAccept">批量接单</el-button><el-button :disabled="loading" type="danger" icon="el-icon-close">批量拒单</el-button><el-button :disabled="loading" type="success" icon="el-icon-check">批量完成</el-button></div><div slot="header-right-filters"><el-input style="width:220px;margin-bottom:10px" placeholder="请输入查询ID"></el-input><el-input style="width:220px" placeholder="请输入内容"></el-input></div><div slot="header-right-handler"><el-button type="primary" icon="el-icon-search">查询</el-button></div><el-table slot="main" ref="table" @selection-change="selectionChange" @row-click="rowClick" :loading="loading" :data="orderList" :highlight-current-row="true" border tooltip-effect="dark" height="100%" style="width:100%;height:100%"><el-table-column fixed type="selection"></el-table-column><el-table-column show-overflow-tooltip width="230" prop="code" label="订单号"></el-table-column><el-table-column show-overflow-tooltip prop="biz.name" label="业务名称"></el-table-column><el-table-column show-overflow-tooltip prop="orderTime" label="下单时间"></el-table-column><el-table-column show-overflow-tooltip label="支付方式"><template slot-scope="scope">{{ scope.row.payType === 'Before' ? '预付' : '后付' }}</template></el-table-column><el-table-column show-overflow-tooltip prop="realPay" label="支付金额"></el-table-column><el-table-column show-overflow-tooltip prop="shopName" label="门店"></el-table-column><el-table-column show-overflow-tooltip prop="status" label="订单状态"><template slot-scope="scope"><el-tag v-if="orderAcceptStatus.indexOf(scope.row.status) > -1" size="mini" type="warning">待接单</el-tag><el-tag v-else-if="orderCompletedStatus.indexOf(scope.row.status) > -1" size="mini" type="success">待完成</el-tag><span v-else></span></template></el-table-column><el-table-column show-overflow-tooltip width="220" label="操作" fixed="right"><template slot-scope="scope"><template v-if="orderAcceptStatus.indexOf(scope.row.status) > -1"><el-button type="primary" size="mini">接单</el-button><el-button type="danger" size="mini">拒单</el-button></template><template v-if="orderCompletedStatus.indexOf(scope.row.status) > -1"><el-button type="success" size="mini">完成</el-button></template><el-button type="info" size="mini">详情</el-button></template></el-table-column></el-table><div slot="footer"><el-pagination background border :page-sizes="[10, 20, 30, 40]" :page-size="100" layout="total, sizes, prev, pager, next, jumper" :total="400"></el-pagination></div></layout-table></div><script>require(['vue', 'ELEMENT', 'util/index', 'components/layout-table'], function (Vue, ELEMENT, u, LayoutTable) {
      Vue.use(ELEMENT)
      
      // 接单状态 CustPosted
      const orderAcceptStatus = ['CustPosted']
      // 完成服务状态 ShopAccepted
      const orderCompletedStatus = ['ShopAccepted']
      new Vue({
        el: '#app',
        components: {
          LayoutTable: LayoutTable
        },
        data: function () {
          return {
            ajaxCount: 0,
            loading: false,
            orderAccepting: false, // 接单请求中
            orderAcceptStatus,
            orderCompletedStatus,
            orderList: [],
            selects: [],
            listQuery: {
              p: -1,
              len: 10,
              sort: '-orderTime'
            },
            currentPage: 0,
            total: 0
          }
        },
        created: function () {
          // utils的一些初始化动作
          u.init(this);
          this.listQuery.p++
        },
        mounted: function () {
          var _this = this
          window.addEventListener('message', function (e) {
            var domain = window.location.origin
            var sourceDomain = e.origin || e.originalEvent.origin
            if (domain === sourceDomain) {
              if (e.data && e.data === 'Order') {
                // console.log('刷新了')
                _this.getOrderList()
              }
            }
          }, false)
        },
        methods: {
          // 获取订单列表
          getOrderList: function () {
            u.get('/admin/order/list', this.listQuery, function (data) {
              if (data.success) {
                this.orderList = data.data.content;
              } else {
                u.$message.error(data.message);
              }
            })
          },
          orderAccept: function (code, num) {
            u.post('/admin/order/accept', { code: code }, function (data) {
              if (data.success) {
                u.$message.success('接单成功 ' + code);
              } else {
                u.$notify.error({
                  title: '接单失败 ' + code,
                  message: data.message,
                  showClose: false
                });
              }
            }).always(function () {
              // 记录处理完的请求
              this.ajaxCount++;
              if (this.ajaxCount === num) {
                // 完成所有请求后，重置状态，刷新表格
                this.orderAccepting = false;
                this.loading = false;
                this.ajaxCount = 0;
                this.getOrderList()
              }
            })
          },
          doOrderAccept: function (code) {
            this.orderAccepting = true
            this.loading = true
            this.orderAccept(code, 1)
          },
          doBatchOrderAccept: function () {
            var len = this.selects.length;
            if (len === 0) {
              return false
            }
            this.orderAccepting = true;
            this.loading = true;
            this.selects.forEach(function (item) {
              this.orderAccept(item.code, len)
            }, this);
          },
          orderCompleted: function () {
            console.log(1)
          },
          doOrderCompleted: function () {
            console.log(1)
          },
          orderDenied: function () {
            console.log(1)
          },
          doOrderDenied: function () {
            console.log(1)
          },
          // 选项改变
          selectionChange: function (selects) {
            this.selects = selects
          },
          // 单击某一行选中
          rowClick: function (row) {
            this.$refs.table.toggleRowSelection(row, this.selects.indexOf(row) === -1)
          },
          sizeChange: function (size) {
            this.listQuery.len = size
          },
          currentPage: function (page) {
            this.currentPage = page
          }
        },
        watch: {
          listQuery: {
            handler: function (newVl) {
              // this.getOrderList()
            },
            deep: true
          }
        }
      })
    })</script></body></html>